pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building your code with Maven...'
                // Replace with your actual build command
                bat 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JUnit...'
                // Replace with your actual test command
                bat 'mvn test'
                echo 'Running integration tests with Selenium...'
                // Replace with your integration test command
                bat 'java -jar selenium-tests.jar'
            }
            post {
                success {
                    mail to: "disadimethasa@gmail.com",
                         subject: "Unit and Integration Tests - Build # ${currentBuild.number}",
                         body: "The pipeline has successfully completed Unit and Integration Tests. Build logs are attached."
                }
                failure {
                    mail to: "disadimethasa@gmail.com",
                         subject: "Unit and Integration Tests Failure - Build # ${currentBuild.number}",
                         body: "The pipeline has failed at stage ${currentStage.name}. Build logs are attached."
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube...'
                // Replace with your actual code analysis command
                bat 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for vulnerabilities with SAST scanner...'
                // Replace with your actual security scan command
                bat 'sast-scanner --scan'
            }
            post {
                success {
                    mail to: "disadimethasa@gmail.com",
                         subject: "Security Scan Success - Build # ${currentBuild.number}",
                         body: "The pipeline has successfully completed Security Scan. Build logs are attached."
                }
                failure {
                    mail to: "disadimethasa@gmail.com",
                         subject: "Security Scan Failure - Build # ${currentBuild.number}",
                         body: "The pipeline has failed at stage ${currentStage.name}. Build logs are attached."
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server using AWS...'
                // Replace with your actual deployment command
                bat 'aws deploy push --application-name my-app --s3-location s3://my-bucket/my-app.zip'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
                // Replace with your actual command for staging tests
                bat 'java -jar integration-tests-staging.jar'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production server using AWS tools...'
                // Replace with your actual production deployment command
                bat 'aws deploy create-deployment --application-name my-app --deployment-group-name my-prod-group --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip'
            }
        }
    }

    post {
        success {
            mail to: "disadimethasa@gmail.com",
                 subject: "Pipeline Success - Build # ${currentBuild.number}",
                 body: "The pipeline has successfully completed all stages. Build logs are attached."
        }
        failure {
            mail to: "disadimethasa@gmail.com",
                 subject: "Pipeline Failure - Build # ${currentBuild.number}",
                 body: "The pipeline has failed at stage ${currentStage.name}. Build logs are attached."
        }
    }
}
